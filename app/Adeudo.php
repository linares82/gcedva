<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use App\Traits\GetAllDataTrait;
use App\Traits\RelationManagerTrait;
use Illuminate\Database\Eloquent\SoftDeletes;

class Adeudo extends Model
{
    use RelationManagerTrait,GetAllDataTrait;
    use SoftDeletes;

    public function __construct(array $attributes = array())
    {
        parent::__construct($attributes);
		$this->addRelationApp( new \App\Cliente, 'nombre' );  // generated by relation command - Cliente,Adeudo
		$this->addRelationApp( new \App\CajaConcepto, 'name' );  // generated by relation command - CajaConcepto,Adeudo
		$this->addRelationApp( new \App\CuentaContable, 'name' );  // generated by relation command - CuentaContable,Adeudo
		$this->addRelationApp( new \App\PlanPagoLn, 'fecha_pago' );  // generated by relation command - PlanPagoLn,Adeudo
		$this->addRelationApp( new \App\Caja, 'subtotal' );  // generated by relation command - Caja,Adeudo
		
    } 

	//Mass Assignment
	protected $fillable = ['cliente_id','caja_concepto_id', 'caja_id', 'cuenta_contable_id', 'cuenta_recargo_id',
	'fecha_pago','monto','inicial_bnd','plan_pago_ln_id','usu_alta_id','usu_mod_id','combinacion_cliente_id',
	'pagado_bnd'];

	public function usu_alta() {
		return $this->hasOne('App\User', 'id', 'usu_alta_id');
	}// end

	public function usu_mod() {
		return $this->hasOne('App\User', 'id', 'usu_mod_id');
	}// end


    protected $dates = ['deleted_at'];

	// generated by relation command - Cliente,Adeudo - start
	public function cliente() {
		return $this->belongsTo('App\Cliente');
	}// end

	// generated by relation command - CajaConcepto,Adeudo - start
	public function cajaConcepto() {
		return $this->belongsTo('App\CajaConcepto');
	}// end

	// generated by relation command - CuentaContable,Adeudo - start
	public function cuentaContable() {
		return $this->belongsTo('App\CuentaContable');
	}// end

	// generated by relation command - PlanPagoLn,Adeudo - start
	public function planPagoLn() {
		return $this->belongsTo('App\PlanPagoLn');
	}// end
        
        
	// generated by relation command - Adeudo,CajaLn - start
	public function cajaLn() {
		return $this->hasOne('App\CajaLn');
	}// end

	// generated by relation command - CombinacionCliente,Adeudo - start
	public function combinacionCliente() {
		return $this->belongsTo('App\CombinacionCliente');
	}// end

	// generated by relation command - Caja,Adeudo - start
	public function caja() {
		return $this->belongsTo('App\Caja');
	}// end

	// generated by relation command - Adeudo,Descuento - start
	public function descuento() {
		return $this->hasOne('App\Descuento');
	}// end
 
}