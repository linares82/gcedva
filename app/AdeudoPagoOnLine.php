<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use App\Traits\GetAllDataTrait;
use App\Traits\RelationManagerTrait;
use Illuminate\Database\Eloquent\SoftDeletes;

class AdeudoPagoOnLine extends Model
{
    use RelationManagerTrait,GetAllDataTrait;
    use SoftDeletes;

    public function __construct(array $attributes = array())
    {
        parent::__construct($attributes);
		$this->addRelationApp( new \App\Caja, 'consecutivo' );  // generated by relation command - Caja,AdeudoPagoOnLine
		$this->addRelationApp( new \App\Pago, 'id' );  // generated by relation command - Pago,AdeudoPagoOnLine
		$this->addRelationApp( new \App\PeticionMultipago, 'id' );  // generated by relation command - PeticionMultipago,AdeudoPagoOnLine
    } 

	//Mass Assignment
	protected $fillable = ['adeudo_id','subtotal','descuento','recargo','cliente_id','usu_alta_id','usu_mod_id'];

	public function usu_alta() {
		return $this->hasOne('App\User', 'id', 'usu_alta_id');
	}// end

	public function usu_mod() {
		return $this->hasOne('App\User', 'id', 'usu_mod_id');
	}// end


    protected $dates = ['deleted_at'];

	// generated by relation command - Caja,AdeudoPagoOnLine - start
	public function caja() {
		return $this->belongsTo('App\Caja');
	}// end

	// generated by relation command - Pago,AdeudoPagoOnLine - start
	public function pago() {
		return $this->belongsTo('App\Pago');
	}// end

	// generated by relation command - PeticionMultipago,AdeudoPagoOnLine - start
	public function peticionMultipago() {
		return $this->belongsTo('App\PeticionMultipago');
	}// end
}