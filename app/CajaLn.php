<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use App\Traits\GetAllDataTrait;
use App\Traits\RelationManagerTrait;
use Illuminate\Database\Eloquent\SoftDeletes;
use Venturecraft\Revisionable\RevisionableTrait;

class CajaLn extends Model
{
    use RelationManagerTrait,GetAllDataTrait;
    use SoftDeletes;
	use RevisionableTrait;

	protected $revisionCleanup = true; //Remove old revisions (works only when used with $historyLimit)
    protected $historyLimit = 1000;

    public function __construct(array $attributes = array())
    {
        parent::__construct($attributes);
		$this->addRelationApp( new \App\Caja, 'cliente_id' );  // generated by relation command - Caja,CajaLn
		$this->addRelationApp( new \App\CajaConcepto, 'name' );  // generated by relation command - CajaConcepto,CajaLn
		$this->addRelationApp( new \App\Adeudo, 'monto' );  // generated by relation command - Adeudo,CajaLn
    } 

	//Mass Assignment
	protected $fillable = ['caja_id','caja_concepto_id','subtotal','descuento','recargo','total','autorizacion_descuento','adeudo_id',
                               'usu_alta_id','usu_mod_id','promo_plan_ln_id'];

	public function usu_alta() {
		return $this->hasOne('App\User', 'id', 'usu_alta_id');
	}// end

	public function usu_mod() {
		return $this->hasOne('App\User', 'id', 'usu_mod_id');
	}// end


    protected $dates = ['deleted_at'];

	// generated by relation command - Caja,CajaLn - start
	public function caja() {
		return $this->belongsTo('App\Caja');
	}// end

	// generated by relation command - CajaConcepto,CajaLn - start
	public function cajaConcepto() {
		return $this->belongsTo('App\CajaConcepto');
	}// end

	// generated by relation command - Adeudo,CajaLn - start
	public function adeudo() {
		return $this->belongsTo('App\Adeudo', 'adeudo_id','id');
	}// end

	// generated by relation command - CajaLn,AdeudoPagoOnLine - start
	public function adeudoPagoOnLines() {
		return $this->hasMany('App\AdeudoPagoOnLine');
	}// end
}