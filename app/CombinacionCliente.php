<?php

namespace App;

use App\Traits\GetAllDataTrait;
use App\Traits\RelationManagerTrait;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Venturecraft\Revisionable\RevisionableTrait;

class CombinacionCliente extends Model
{
	use RelationManagerTrait, GetAllDataTrait;
	use SoftDeletes;
	use RevisionableTrait;

	public function __construct(array $attributes = array())
	{
		parent::__construct($attributes);
		$this->addRelationApp(new \App\Cliente, 'nombre');  // generated by relation command - Cliente,CombinacionCliente
		$this->addRelationApp(new \App\Plantel, 'razon');  // generated by relation command - Plantel,CombinacionCliente
		$this->addRelationApp(new \App\PlanPago, 'name');  // generated by relation command - Ccuestionario,Cliente	
	}

	//Mass Assignment
	protected $fillable = ['cliente_id', 'plantel_id', 'especialidad_id', 'nivel_id', 'grado_id', 'turno_id', 'bnd_inscrito', 'fecha_inscrito', 'plan_pago_id', 'bnd_beca'];

	public function usu_alta()
	{
		return $this->hasOne('App\User', 'id', 'usu_alta_id');
	} // end

	public function usu_mod()
	{
		return $this->hasOne('App\User', 'id', 'usu_mod_id');
	} // end


	protected $dates = ['deleted_at'];

	// generated by relation command - Cliente,CombinacionCliente - start
	public function cliente()
	{
		return $this->belongsTo('App\Cliente');
	} // end

	// generated by relation command - Plantel,CombinacionCliente - start
	public function plantel()
	{
		return $this->belongsTo('App\Plantel');
	} // end

	public function especialidad()
	{
		return $this->belongsTo('App\Especialidad');
	} // end

	public function nivel()
	{
		return $this->belongsTo('App\nivel');
	} // end

	public function grado()
	{
		return $this->belongsTo('App\Grado');
	} // end

	public function turno()
	{
		return $this->belongsTo('App\Turno');
	} // end
	// generated by relation command - Ccuestionario,Cliente - start
	public function planPago()
	{
		return $this->belongsTo('App\PlanPago');
	} // end

	// generated by relation command - CombinacionCliente,Adeudo - start
	public function adeudos()
	{
		return $this->hasMany('App\Adeudo');
	} // end
	public function inscripcion()
	{
		return $this->hasOne('App\Inscripcion');
	} // end
}
