<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use App\Traits\GetAllDataTrait;
use App\Traits\RelationManagerTrait;
use Illuminate\Database\Eloquent\SoftDeletes;

class Especialidad extends Model
{
	use RelationManagerTrait, GetAllDataTrait;
	use SoftDeletes;

	public function __construct(array $attributes = array())
	{
		parent::__construct($attributes);
		$this->addRelationApp(new \App\Plantel, 'razon');  // generated by relation command - Area,Empleado
		$this->addRelationApp(new \App\Lectivo, 'name');  // generated by relation command - Area,Empleado
	}

	//Mass Assignment
	protected $fillable = [
		'name', 'rvoe', 'ccte', 'plantel_id', 'usu_alta_id', 'usu_mod_id', 'meta', 'vencimiento_rvoe',
		'bnd_usar_lectivo', 'f_inicio', 'f_fin', 'lectivo_id', 'imagen', 'imagen_anterior',
		'abreviatura', 'fondo_credencial'
	];

	public function usu_alta()
	{
		return $this->hasOne('App\User', 'id', 'usu_alta_id');
	} // end

	public function usu_mod()
	{
		return $this->hasOne('App\User', 'id', 'usu_mod_id');
	} // end

	public function plantel()
	{
		return $this->belongsTo('App\Plantel');
	} // end
	protected $dates = ['deleted_at'];

	// generated by relation command - Especialidad,Cliente - start
	public function clientes()
	{
		return $this->hasMany('App\Cliente');
	} // end

	// generated by relation command - Especialidad,Plantilla - start
	public function plantillas()
	{
		return $this->hasMany('App\Plantilla');
	} // end

	// generated by relation command - Especialidad,Alumno - start
	public function alumnos()
	{
		return $this->hasMany('App\Alumno');
	} // end

	// generated by relation command - Especialidad,PeriodoEstudio - start
	public function periodoEstudios()
	{
		return $this->hasMany('App\PeriodoEstudio');
	} // end

	// generated by relation command - Especialidad,Hacademica - start
	public function hacademicas()
	{
		return $this->hasMany('App\Hacademica');
	} // end

	// generated by relation command - Especialidad,Empresa - start
	public function empresas()
	{
		return $this->hasMany('App\Empresa');
	} // end
	// generated by relation command - Especialidad,Empresa - start
	public function lectivo()
	{
		return $this->belongsTo('App\Lectivo');
	} // end

	// generated by relation command - Especialidad,CombinacionCliente - start
	public function combinacionClientes()
	{
		return $this->hasMany('App\CombinacionCliente');
	} // end

	// generated by relation command - Especialidad,Prospecto - start
	public function prospectos() {
		return $this->hasMany('App\Prospecto');
	}// end
}
