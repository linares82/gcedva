<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use App\Traits\GetAllDataTrait;
use App\Traits\RelationManagerTrait;
use Illuminate\Database\Eloquent\SoftDeletes;

class FormaPago extends Model
{
	use RelationManagerTrait, GetAllDataTrait;
	use SoftDeletes;

	public function __construct(array $attributes = array())
	{
		parent::__construct($attributes);
	}

	//Mass Assignment
	protected $fillable = ['name', 'usu_alta_id', 'usu_mod_id', 'cve_multipagos', 'cve_sat'];

	public function usu_alta()
	{
		return $this->hasOne('App\User', 'id', 'usu_alta_id');
	} // end

	public function usu_mod()
	{
		return $this->hasOne('App\User', 'id', 'usu_mod_id');
	} // end


	protected $dates = ['deleted_at'];

	// generated by relation command - FormaPago,Caja - start
	public function cajas()
	{
		return $this->hasMany('App\Caja');
	} // end

	// generated by relation command - FormaPago,Pago - start
	public function pagos()
	{
		return $this->hasMany('App\Pago');
	} // end

	// generated by relation command - FormaPago,CotizacionCurso - start
	public function cotizacionCursos()
	{
		return $this->hasMany('App\CotizacionCurso');
	} // end

	// generated by relation command - FormaPago,FacturaCotizacion - start
	public function facturaCotizacions()
	{
		return $this->hasMany('App\FacturaCotizacion');
	} // end

	// generated by relation command - FormaPago,Egreso - start
	public function egresos()
	{
		return $this->hasMany('App\Egreso');
	} // end

	public function plantels()
	{
		return $this->belongsToMany('App\Plantel', 'forma_pago_plantel', 'forma_pago_id', 'plantel_id');
	} // end
}
