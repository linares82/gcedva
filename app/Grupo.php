<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use App\Traits\GetAllDataTrait;
use App\Traits\RelationManagerTrait;
use Illuminate\Database\Eloquent\SoftDeletes;

class Grupo extends Model
{
    use RelationManagerTrait,GetAllDataTrait;
    use SoftDeletes;

    public function __construct(array $attributes = array())
    {
        parent::__construct($attributes);
		$this->addRelationApp( new \App\Plantel, 'razon' );  // generated by relation command - Plantel,Grupo
		$this->addRelationApp( new \App\Jornada, 'name' );  // generated by relation command - Jornada,Grupo
		$this->addRelationApp( new \App\Salon, 'name' );  // generated by relation command - Salon,Grupo
		$this->addRelationApp( new \App\PeriodoEstudio, 'name' );  // generated by relation command - PeriodoEstudio,Grupo
    } 

	//Mass Assignment
	protected $fillable = ['name','desc_corta','limite_alumnos','registrados','minimo_alumnos','jornada_id','salon_id','periodo_estudio_id', 'plantel_id','usu_alta_id','usu_mod_id'];

	public function usu_alta() {
		return $this->hasOne('App\User', 'id', 'usu_alta_id');
	}// end

	public function usu_mod() {
		return $this->hasOne('App\User', 'id', 'usu_mod_id');
	}// end


    protected $dates = ['deleted_at'];

	// generated by relation command - Plantel,Grupo - start
	public function plantel() {
		return $this->belongsTo('App\Plantel');
	}// end

	// generated by relation command - Jornada,Grupo - start
	public function jornada() {
		return $this->belongsTo('App\Jornada');
	}// end

	// generated by relation command - Salon,Grupo - start
	public function salon() {
		return $this->belongsTo('App\Salon');
	}// end

	// generated by relation command - PeriodoEstudio,Grupo - start
	public function periodoEstudio() {
		return $this->belongsTo('App\PeriodoEstudio');
	}// end

	// generated by relation command - Grupo,Alumno - start
	public function alumnos() {
		return $this->hasMany('App\Alumno');
	}// end

	// generated by relation command - Grupo,AsignacionAcademica - start
	public function asignacionAcademicas() {
		return $this->hasMany('App\AsignacionAcademica');
	}// end

	// generated by relation command - Grupo,Hacademica - start
	public function hacademicas() {
		return $this->hasMany('App\Hacademica');
	}// end

	// generated by relation command - Grupo,AsistenciasC - start
	public function asistenciasCs() {
		return $this->hasMany('App\AsistenciasC');
	}// end
        
        public function periodosEstudio()
        {
            return $this->belongsToMany('App\PeriodoEstudio','grupo_periodo_estudios', 'grupo_id', 'periodo_estudio_id');
        }

	// generated by relation command - Grupo,Inscripcion - start
	public function inscripcions() {
		return $this->hasMany('App\Inscripcion');
	}// end
}