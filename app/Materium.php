<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use App\Traits\GetAllDataTrait;
use App\Traits\RelationManagerTrait;
use Illuminate\Database\Eloquent\SoftDeletes;

class Materium extends Model
{

    use RelationManagerTrait,
        GetAllDataTrait;
    use SoftDeletes;

    //protected $table = 'materias';
    public function __construct(array $attributes = array())
    {
        parent::__construct($attributes);
        $this->addRelationApp(new \App\Plantel, 'razon');  // generated by relation command - Plantel,Materium
        $this->addRelationApp(new \App\Ponderacion, 'name');  // generated by relation command - Plantel,Materium
        $this->addRelationApp(new \App\Modulo, 'name');  // generated by relation command - Plantel,Materium
    }

    //Mass Assignment
    protected $fillable = [
        'ponderacion_id',
        'name',
        'abreviatura',
        'seriada_bnd',
        'serie_anterior',
        'plantel_id',
        'usu_alta_id',
        'usu_mod_id',
        'modulo_id',
        'codigo',
        'creditos',
        'bnd_oficial',
        'orden',
        'bnd_tiene_nombre_oficial',
        'nombre_oficial',
        'bnd_ponderacion',
        'id_asignatura_certificado'
    ];

    public function usu_alta()
    {
        return $this->hasOne('App\User', 'id', 'usu_alta_id');
    }

    // end

    public function usu_mod()
    {
        return $this->hasOne('App\User', 'id', 'usu_mod_id');
    }

    // end

    protected $dates = ['deleted_at'];

    // generated by relation command - Plantel,Materium - start
    public function plantel()
    {
        return $this->belongsTo('App\Plantel');
    }

    // end

    public function serie_anterior()
    {
        return $this->belongsTo('App\Materium', 'serie_anterior', 'id');
    }

    // end

    public function periodoEstudio()
    {
        //return $this->belongsToMany('App\PeriodoEstudio', 'periodo_materium', 'materium_id', 'periodo_estudio_id');
        return $this->belongsToMany('App\PeriodoEstudio', 'materium_periodo_estudios', 'materium_id', 'periodo_estudio_id');
    }

    public function ponderacion()
    {
        return $this->belongsToMany('App\Ponderacion');
    }

    public function ponderacionMaterias()
    {
        //return $this->belongsToMany('App\PeriodoEstudio', 'periodo_materium', 'materium_id', 'periodo_estudio_id');
        return $this->belongsToMany('App\Materium', 'materiap_materiah', 'materiump_id', 'materiumh_id');
    }

    public function padre()
    {
        return $this->belongsToMany('App\Materium', 'materiap_materiah', 'materiumh_id', 'materiump_id');
    }

    public function modulo()
    {
        return $this->belongsToMany('App\Modulo');
    }

    public function pivotPeriodoEstudio()
    {
        return hasMany('App\MateriumPeriodo');
    }
}
