<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use App\Traits\GetAllDataTrait;
use App\Traits\RelationManagerTrait;
use Illuminate\Database\Eloquent\SoftDeletes;

class PeriodoEstudio extends Model
{
	use RelationManagerTrait, GetAllDataTrait;
	use SoftDeletes;

	public function __construct(array $attributes = array())
	{
		parent::__construct($attributes);
		$this->addRelationApp(new \App\Plantel, 'razon');  // generated by relation command - Plantel,PeriodoEstudio
		$this->addRelationApp(new \App\Especialidad, 'name');  // generated by relation command - Especialidad,PeriodoEstudio
		$this->addRelationApp(new \App\Nivel, 'name');  // generated by relation command - Nivel,PeriodoEstudio
		$this->addRelationApp(new \App\Grado, 'name');  // generated by relation command - Grado,PeriodoEstudio
		$this->addRelationApp(new \App\PlanEstudio, 'name');  // generated by relation command - Grado,PeriodoEstudio
	}

	//Mass Assignment
	protected $fillable = [
		'name', 'plantel_id', 'nivel_id', 'especialidad_id', 'grado_id', 'usu_alta_id', 'usu_mod_id',
		'bnd_activo', 'orden', 'plan_estudio_id', 'rvoe', 'cct', 'fec_vigencia_rvoe', 'desc_certificado'
	];

	public function usu_alta()
	{
		return $this->hasOne('App\User', 'id', 'usu_alta_id');
	} // end

	public function usu_mod()
	{
		return $this->hasOne('App\User', 'id', 'usu_mod_id');
	} // end


	protected $dates = ['deleted_at'];

	// generated by relation command - Plantel,PeriodoEstudio - start
	public function plantel()
	{
		return $this->belongsTo('App\Plantel');
	} // end

	// generated by relation command - Especialidad,PeriodoEstudio - start
	public function especialidad()
	{
		return $this->belongsTo('App\Especialidad');
	} // end

	// generated by relation command - Nivel,PeriodoEstudio - start
	public function nivel()
	{
		return $this->belongsTo('App\Nivel');
	} // end

	// generated by relation command - Grado,PeriodoEstudio - start
	public function grado()
	{
		return $this->belongsTo('App\Grado');
	} // end

	public function materias()
	{
		//return $this->belongsToMany('App\Materium', 'periodo_materium', 'periodo_estudio_id', 'materium_id');
		return $this->belongsToMany('App\Materium', 'materium_periodos', 'periodo_estudio_id', 'materium_id');
	}

	public function pivotMaterias()
	{
		return hasMany('App\MateriumPeriodo');
	}

	// generated by relation command - PeriodoEstudio,Grupo - start
	/*public function grupos() {
		return $this->hasMany('App\Grupo');
	}// end
         * 
         */

	public function grupos()
	{
		return $this->belongsToMany('App\Grupo', 'grupo_periodo_estudios', 'periodo_estudio_id', 'grupo_id');
		//return $this->belongsToMany('App\PeriodoEstudio','grupo_periodo_estudios', 'grupo_id', 'periodo_estudio_id');
	}

	public function planEstudio()
	{
		return $this->belongsTo('App\PlanEstudio');
	}
}
