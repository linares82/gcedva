<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use App\Traits\GetAllDataTrait;
use App\Traits\RelationManagerTrait;
use Illuminate\Database\Eloquent\SoftDeletes;

class Ticket extends Model
{
    use RelationManagerTrait,GetAllDataTrait;
    use SoftDeletes;

    public function __construct(array $attributes = array())
    {
        parent::__construct($attributes);
		$this->addRelationApp( new \App\CategoriaTicket, 'name' );  // generated by relation command - CategoriaTicket,Ticket
		$this->addRelationApp( new \App\PrioridadTicket, 'name' );  // generated by relation command - PrioridadTicket,Ticket
		$this->addRelationApp( new \App\StTicket, 'name' );  // generated by relation command - StTicket,Ticket
		//$this->addRelationApp( new \App\User, 'name' );  // generated by relation command - StTicket,Ticket

    } 

	//Mass Assignment
	protected $fillable = ['categoria_ticket_id','nombre_corto','detalle','fecha','prioridad_ticket_id','asignado_a','st_ticket_id','usu_alta_id','usu_mod_id'];

	public function usu_alta() {
		return $this->hasOne('App\User', 'id', 'usu_alta_id');
	}// end

	public function usu_mod() {
		return $this->hasOne('App\User', 'id', 'usu_mod_id');
	}// end


    protected $dates = ['deleted_at'];

	// generated by relation command - CategoriaTicket,Ticket - start
	public function categoriaTicket() {
		return $this->belongsTo('App\CategoriaTicket');
	}// end

	// generated by relation command - PrioridadTicket,Ticket - start
	public function prioridadTicket() {
		return $this->belongsTo('App\PrioridadTicket');
	}// end

	// generated by relation command - PrioridadTicket,Ticket - start
	public function asignadoA() {
		return $this->belongsTo('App\User', 'asignado_a','id');
	}// end

	// generated by relation command - StTicket,Ticket - start
	public function stTicket() {
		return $this->belongsTo('App\StTicket');
	}// end

	public function etiquetas() {
		return $this->belongsToMany('App\EtiquetasTicket');
	}// end

	// generated by relation command - Ticket,AvancesTicket - start
	public function avancesTickets() {
		return $this->hasMany('App\AvancesTicket');
	}// end

	// generated by relation command - Ticket,ImagenesTicket - start
	public function imagenesTickets() {
		return $this->hasMany('App\ImagenesTicket');
	}// end
}